// Lab2(1).cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//
#include <iostream>
#include "Matrix.h"
#include "Vector.h"
//Федоров Максим, ИВТ-3, Вариант 9

/*Написать классы Vector и Matrix для хранения и обработки одномерных и
двумерных массивов, соответственно.Реализовать задание 2 лабораторной работы №1
с помощью созданных классов.Все функции оформить в виде методов классов.
В коде отразить следующее :
 Выделение и освобождение динамической памяти производить в конструкторах и
деструкторах классов, соответственно.
 В классе Vector перегрузить оператор индексации[].В классе Matrix добавить
методы T at(int i, int j) const и setAt(int i, int j, T val), которые
позволяют получить и установить значение элемента массива с индексом[i][j], T –
это тип элементов массива по варианту(int или double).
 Перегрузить операторы инкремента и декремента(как префиксного, так и
	постфиксного).Смысл инкремента / декремента всего массива заключается в
	инкременте / декременте каждого элемента массива.*/

//Задание 2 лабораторной работы №1:

/*Написать программу, которая преобразует одномерный массив(1D) в двумерный(2D)
(или наоборот), в соответствии с вариантом.Необходимо оформить в отдельных
функциях код следующих действий : 1) инициализация массива; 2) вывод массива; 3)
преобразование массива(создание нового массива с другой структурой).Память под
массивы выделять динамически и для доступа к элементам использовать указатели.
Ввод - вывод данных организовать средствами iostream и iomanip.*/

//Вариант 9

/*Преобразование: 2D → 1D.Двумерный массив 5х3 вещественных чисел необходимо
выложить в один ряд по элементам по столбцам сверху вниз.
Инициализация : заполнить массив числами x[i][j] = sin(i – j) + cos(i + j).
Вывод на экран : на каждый элемент массива отвести 10 позиций.
[ 1 -0.3012 -1.325
 1.382 -0.4161 -1.831
 0.4932 -0.1485 -0.6536
 -0.8489 0.2557 1.125
 -1.41 0.4248 1.869 ]
=>
[1 1.382 0.4932 -0.8489 -1.41 -0.3012 -0.4161 -0.1485 0.2557 0.4248 -1.325 –
1.831 -0.6536 1.125 1.869]*/




int main()
{
	setlocale(LC_ALL, "Rus");
	Matrix matrix;
	Vector vector;
	std::cout << "Данный массив: \n" <<  std::endl;
	matrix.initializeMatrix();
	matrix.printMatrix();
	std::cout << std::endl;

	std::cout << "Вывод элемента под индексом (3;1): " << matrix.at(3, 1) <<"\n" << std::endl;
	matrix.setAt(2, 0, 5.257);
	std::cout << "Заменить элемент под индексом (2;0) на 5.257: " << matrix.at(2, 0) << "\n" << std::endl;
	matrix.printMatrix();
	matrix.setAt(2, 0, 0.493151);
	std::cout << "Возвратим элемент под индексом (2;0): " << matrix.at(2, 0) << "\n" << std::endl;
	matrix.printMatrix();
	std::cout << "Увеличим элементы массива на 1: \n" << std::endl;
	++matrix;
	matrix.printMatrix();
	std::cout << "Уменьшим элементы массива на 1: \n" << std::endl;
	matrix--;
	matrix.printMatrix();	
	std::cout << "Преобразование 2D -> 1D: " << "\n" << std::endl;
	vector.makeVector(matrix.getMatrix());
	vector.printVector();
	std::cout << std::endl;

	std::cout << "Элемент массива под индексом 5:" << vector.operator[](5) << "\n" << std::endl;
	std::cout << "Увеличим элементы массива на 1: \n" << std::endl;
	++vector;
	vector.printVector();
	std::cout << "Уменьшим элементы массива на 1: \n" << std::endl;
	vector--;
	vector.printVector();
	
	return 0;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
